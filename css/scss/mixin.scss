@charset "utf-8";

// title       : 믹스인
// Author      : PLAN I
// Create date : 2023-01-01

$icon   : 'remixicon';          // 기본 아이콘 : 리믹스 아이콘
$font   : 'Pretendard';         // 기본 폰트 : 프리텐다드
$size   : 1.6rem;               // 기본 폰트 사이즈
$color  : #555;               // 기본 폰트 색

$time1  : all 0s;               // transition 원복
$time2  : all 0.2s;             // transition 기본

// 가로
@mixin width($width1, $width2) {width: $width1; max-width: $width2; margin-left: auto !important; margin-right: auto !important;}

// 줄간격
@mixin lh($lh, $fs) {line-height: calc($lh / $fs);}

// 폰트 기본설정
@mixin font($font, $size, $color, $lh)
{
    @include lh($lh, $size);

    font-family : $font;  // 영문폰트(구글)의 경우 따옴표 추가
    font-size   : $size;
    color       : $color;
}

// 라인이 있는 요소의 세로값
@mixin height($height, $bdwidth, $bdcolor)
{
    height      : $height;
    border      : $bdwidth solid $bdcolor;
    line-height : calc($height - ($bdwidth * 2));
}

// 한줄 줄임
@mixin ellipsis($type, $height)
{
    overflow: hidden; text-overflow: ellipsis;

    @if $type == type1
    {
        white-space : nowrap;
        min-height  : $height;
        line-height : $height;
    }

    @if $type != type1
    {
        display             : -webkit-box;
        max-height          : $height;
        -webkit-box-orient  : vertical;
    }

    @if $type == type2
    {
        -webkit-line-clamp  : 2;
        line-clamp          : 2;
        line-height         : calc($height / 2);
    } 

    @if $type == type3
    {
        -webkit-line-clamp  : 3;
        line-clamp          : 3;
        line-height         : calc($height / 3);
    } 
}

// 배경
@mixin bg1 {position: relative; z-index: 0;}

@mixin bg2($type) 
{
    position: absolute; top: 0; z-index: -1; height: 100%; content: '';

    @if $type == type1
    {
        left: 50%; width: 1000%; transform: translateX(-50%);
    }

    @if $type == type2
    {
        left: 0; width: 100%;
    }
}

// 요소 가운데 정렬
@mixin position($direction)
{
    @if $direction == left
    {
        left: 50%; transform: translateX(-50%);
    } 

    @if $direction == top
    {
        top: 50%; transform: translateY(-50%);
    } 

    @if $direction == center
    {
        top: 50%; left: 50%; transform: translate(-50%, -50%);
    }

    @if $direction == none
    {
        position: relative; top: auto; left: auto; right: auto; bottom: auto; transform: translate(0, 0);
    }
    @else
    {
        position: absolute;
    }
}

// 감춤
@mixin hidden($width, $height) {visibility: hidden; overflow: hidden; width: $width; height: $height; opacity: 0;}

// 보임
@mixin visible($width, $height) {visibility: visible; overflow: visible; width: $width; height: $height; opacity: 1;}

// 아이콘
@mixin icon($type, $content)
{
    font-family : $icon; 
    content     : $content;

    @if $type == type1
    {
        display: inline-block; vertical-align: middle;
    } 

    @if $type == type2
    {
        position: absolute;
    }

    @if $type == type3
    {
        display: block; width: 100%; height: 100%; line-height: inherit;
    }
}

// 정사각형
@mixin square($size) {display: inline-block; overflow: hidden; width: $size; height: $size; text-align: center; line-height: $size; vertical-align: middle;}
 

// 오버 시 회전
@mixin hover($target)
{
    &::#{$target} {transform: rotate(0); transition: $time2;}

    &:hover,
    &:focus
    {
        &::#{$target} {transform: rotate(180deg);}
    }
}

// 타이틀
@mixin title($margin, $font, $color) 
{
    display     : block;
    margin      : $margin;
    font-size   : $font;
    color       : $color;

    &:first-child {margin-top: 0;}
}

// 블릿 리스트
@mixin bul($padding)  
{
    position        : relative;
    padding-left    : $padding;
    text-align      : left;

    &::before {position: absolute; left: 0; top: auto; content: '';}
}

// 리스트
@mixin list($type, $mr, $mt, $ea)
{
    $i: $ea + 1;

    display: flex; width: calc(100% + $mr);

    & > * 
    {
        width: calc((100% / $ea) - $mr); margin-right: $mr;

        &:nth-child(n+#{$ea}) {margin-top: initial;}
        &:nth-child(n+#{$i}) {margin-top: $mt;}
    }

    @if $type == type1
    {
        flex-wrap: nowrap;
    }

    @if $type == type2
    {
        flex-wrap: wrap;
    }
}

// 테이블
@mixin table
{
    display: table; width: 100%; table-layout: fixed;

    & > * {display: table-cell; vertical-align: middle;}
}

// 버튼
@mixin btn($height, $padding, $bdwidth, $bdcolor, $bgcolor, $font, $color)
{
    @include height($height, $bdwidth, $bdcolor);
    @include ellipsis(type1, $height);

    display             : inline-block;
    padding             : $padding;
    background-color    : $bgcolor;
    font-size           : $size;
    color               : $color;
    text-align          : center;
    vertical-align      : middle;
    transition          : $time2;

    @if $bdcolor == $bgcolor
    {
        &:hover,
        &:focus {background-color: transparent; color: $bgcolor;}
    }

    @if $bgcolor == #fff and $bgcolor == transparent
    {
        &:hover,
        &:focus {background-color: $bdcolor; color: #fff;}
    }
}